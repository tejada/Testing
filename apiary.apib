# WeatherbysApp

## Requirements
Poll SOAP XML API and store the data in a DB

There is some data that isn't available in the SOAP XML. So will need to build a CMS for manual user entry to collate the extra fields that are missing and store them into the DB to go along side the polling of the SOAP XML above. We will provide a list of fields/data we need to collect in the CMS shortly. The CMS will not need to do anything more in terms of front end (such as all the features the app will have - just needs to provide APIS to do it)


The apps when performing the API calls will get the data in JSON of the above two combined data.

## Hostage
The client will provide a hostage for the server with your requirements (windows/linux/etc).

## HTTPS / SSL
It needs to supports SSL. The client will provide a certificate with your requirements.

## JSON & JSONP Response Format
All API calls must be REST and support a single format: JSON. Add a callback parameter to your request and the response will be encapsulated in the value you specified.

## Allowed HTTPs requests

- `POST` - To create a resource
- `PUT` - To  update a resource
- `PATCH` - To  update a resource
- `GET` - Get a resource or list of resources
- `DELETE` - To delete resource

## Server Responses

- 200 `OK` - the request was successful (some API calls may return 201 instead).
- 201 `Created` - the request was successful and a resource was created.
- 204 `No Content` - the request was successful but there is no representation to return (i.e. the response is empty).
- 400 `Bad Request` - the request could not be understood or was missing required parameters.
- 401 `Unauthorized` - authentication failed or user doesn't have permissions for requested operation.
- 403 `Forbidden` - access denied.
- 404 `Not Found` - resource was not found.
- 405 `Method Not Allowed` - requested method is not supported for resource.
- 429 `Too Many Requests` - exceeded KirkeWeb API limits. Pause requests, wait up to one minute, and try again.

## Encoding

All endpoints accept and use UTF-8 encoding

## Dates

All dates will be in ISO-8601 format in UTC timezone: `yyyy-MM-dd'T'HH:mm:ss'Z'`

# Group Sponsor
#GET /sponsor

To return the URL of an image (or a base64 encoded image) of the sponsor to use in the apps. The apps will download the image to display in apps.

+ Response 200 (application/json)
    + Attributes
        + sponsorId: 147483647 (number, required) - ID of the sponsor in the form of an long
        + sponsorName: `SkyBet` (string, required)
        + createdAt: `2015-11-30T09:35:10.652Z` (string, required) - server created date
        + updatedAt: `2015-11-30T09:35:10.652Z` (string, required) - server updated date
        + imageUrl: `http://www.url.co.uk/image.jpg` (string, required)
        + success: true (boolean, required)
        
+ Response 403 (application/json)
    + Attributes (error)

# Data Structures

## error (object)
+ success: false (boolean, required)
+ error (object) - Error object
    + errorCode: 403 (number)
    + errorMessage: `Your session has expired, please sign-in and try again.` (string)

## user (object)
+ userId: 147483647 (number, required) - ID of the user in the form of an long
+ firstName: `John` (string, required) - the user's real first name.
+ lastName: `Smith` (string, required) - the user's real last name.
+ isProFilterUpgraded: false (boolean, required) - determine if the user is a Pro filter user
+ isSaveFilterUpgraded: false (boolean, required) - determine if the user is a Pro save filter user
+ isGPSEnabled: true (boolean, required) - determine if the user has GPS enabled
+ isPlayForFunEnabled: true (boolean, required) - determine if the user has Play4Fun enabled
+ isPushNotificationsEnabled: true (boolean, required) - determine if the user has push notifications enabled
+ wins: 0 (number, required) - number of wins
+ loses: 0 (number, required) - number of loses
+ draws: 0 (number, required) - number of draws
+ guineas: 50 (number, required) - number of guineas (virtual money to bet for fun)

## trophy (object)
+ trophyId: 147483647 (number, required) - ID of the trophy in the form of an long
+ name: `BestJumper` (string, required)
+ type: trophy, cup, rosette (enum, required) - 1st Trophy, 2nd Cup, 3rd Rosette
+ bet (bet) - Bet object

## bet (object)
+ betId: 147483647 (number, required) - ID of the bet in the form of an long
+ guineas: 12 (number, required) - Number of guineas to bet in the form of an long
+ createdAt: `2015-11-30T09:35:10.652Z` (string, required) - server created date
+ updatedAt: `2015-11-30T09:35:10.652Z` (string, required) - server updated date
+ raceId: 147483647 (number, required) - ID of the race in the form of an long
+ horseId: 147483647 (number, required) - ID of the horse in the form of an long
+ userId: 147483647 (number, required) - ID of the user in the form of an long
+ results: null (object)

## course (object)
+ courseId: 147483647 (number, required) - ID (courseCode) of the course in the form of an long
+ courseName: TOWCESTER (string, required)
+ createdAt: `2015-11-30T09:35:10.652Z` (string, required) - server created date
+ updatedAt: `2015-11-30T09:35:10.652Z` (string, required) - server updated date
+ date: `2015-11-05` (string, required) - fixtureDate on XML
+ imageUrl: `http://www.url.co.uk/image.jpg` (string, required) - Comes from the CMS
+ description: `course description` (string) - Comes from the CMS
+ stage: Overnight (string)
+ evening: true (boolean)
+ bankHoliday: true (boolean)
+ meetingName: `November Meeting, 2015` (string)

## trainer (object)
+ trainerName: `Seamus Mullins` (string, required) - ID of the trainer in the form of a string

## owner (object)
+ ownerName: `The Up The Glens Partnership` (string, required) - ID of the owner in the form of a string

## jockey (object)
+ jockeyAllowance: 0 (number)
+ jockeyName: `Andrew Thornton` (string, required) - ID of the jockey in the form of a string

## wpredictor (object)
+ wpredictorId: 147483647 (number, required) - ID of the wpredictor in the form of an long
+ races (array[object]) - Comes from the CMS
    + raceId: 147483647 (number) - Comes from the CMS
+ horses (array[object]) - Comes from the CMS
    + horseId: 147483647 (number) - Comes from the CMS

## silk (object)
+ silkId: 147483647 (number, required) - ID of the silk in the form of an long
+ color `red` (string, required) - Comes from the CMS
+ imageUrl: `http://www.url.co.uk/image.jpg` (string, required) - Comes from the CMS